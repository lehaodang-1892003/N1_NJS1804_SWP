// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ODTLearning.Entities;

#nullable disable

namespace ODTLearning.Migrations
{
    [DbContext(typeof(DbminiCapstoneContext))]
    partial class DbminiCapstoneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ODTLearning.Entities.Account", b =>
                {
                    b.Property<string>("IdAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Account");

                    b.Property<DateTime?>("Birthdate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("FisrtName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdAccount")
                        .HasName("PK__Account__ADA956212E0C4E76");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.EducationalQualification", b =>
                {
                    b.Property<string>("IdEducationalEualifications")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_EducationalEualifications");

                    b.Property<string>("CertificateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdTutor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Tutor");

                    b.Property<string>("Img")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("img");

                    b.Property<string>("Organization")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEducationalEualifications")
                        .HasName("PK__Educatio__C1B293B0C50E68E8");

                    b.HasIndex("IdTutor");

                    b.ToTable("EducationalQualifications");
                });

            modelBuilder.Entity("ODTLearning.Entities.Feedback", b =>
                {
                    b.Property<string>("IdFeedback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_feedback");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.Property<string>("IdAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Account");

                    b.Property<string>("IdService")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Service");

                    b.HasKey("IdFeedback")
                        .HasName("PK__Feedback__36BC863086749877");

                    b.HasIndex("IdAccount");

                    b.HasIndex(new[] { "IdService" }, "UQ__Feedback__F6F54EA6E556053E")
                        .IsUnique()
                        .HasFilter("[id_Service] IS NOT NULL");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.Field", b =>
                {
                    b.Property<string>("IdField")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Field");

                    b.Property<string>("FieldName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdField")
                        .HasName("PK__Field__0CC408078A47A724");

                    b.ToTable("Field", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.Message", b =>
                {
                    b.Property<string>("IdChat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Chat");

                    b.Property<string>("IdAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Account");

                    b.HasKey("IdChat")
                        .HasName("PK__Messages__316B3F44B536C3B4");

                    b.HasIndex("IdAccount");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ODTLearning.Entities.Post", b =>
                {
                    b.Property<string>("IdPost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Post");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("IdAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Account");

                    b.Property<string>("IdTypeOfService")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_TypeOfService");

                    b.Property<string>("Price")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Titile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPost")
                        .HasName("PK__Post__2BA425F7AC64A41D");

                    b.HasIndex("IdAccount");

                    b.HasIndex("IdTypeOfService");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime");

                    b.Property<string>("IdAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Account");

                    b.Property<bool?>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssuedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("JwtId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Token")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__RefreshT__3214EC0750897F01");

                    b.HasIndex("IdAccount");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.Rent", b =>
                {
                    b.Property<string>("IdRent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Rent");

                    b.Property<string>("IdAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Account");

                    b.Property<string>("IdSchedule")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Schedule");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdRent")
                        .HasName("PK__Rent__478EEDDFA4D65269");

                    b.HasIndex("IdAccount");

                    b.HasIndex("IdSchedule");

                    b.ToTable("Rent", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.ResquestTutor", b =>
                {
                    b.Property<string>("IdRequestTutor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_RequestTutor");

                    b.Property<string>("IdPost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Post");

                    b.Property<string>("IdTutor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Tutor");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRequestTutor")
                        .HasName("PK__Resquest__61285A5E8EB2641D");

                    b.HasIndex("IdPost");

                    b.HasIndex("IdTutor");

                    b.ToTable("ResquestTutor", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.Schedule", b =>
                {
                    b.Property<string>("IdSchedule")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Schedule");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("IdService")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Service");

                    b.Property<string>("IdTutor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Tutor");

                    b.Property<TimeOnly?>("TimeEnd")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("TimeStart")
                        .HasColumnType("time");

                    b.HasKey("IdSchedule")
                        .HasName("PK__Schedule__B70A1A1150945D1A");

                    b.HasIndex("IdService");

                    b.HasIndex("IdTutor");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.Service", b =>
                {
                    b.Property<string>("IdService")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Service");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdFeedback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_feedback");

                    b.Property<string>("IdTypeOfService")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_TypeOfService");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdService")
                        .HasName("PK__Service__F6F54EA7038DCAB7");

                    b.HasIndex("IdTypeOfService");

                    b.HasIndex(new[] { "IdFeedback" }, "UQ__Service__36BC8631BD63F430")
                        .IsUnique()
                        .HasFilter("[id_feedback] IS NOT NULL");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.Tutor", b =>
                {
                    b.Property<string>("IdTutor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Tutor");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("IdAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Account");

                    b.Property<string>("SpecializedSkills")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdTutor")
                        .HasName("PK__Tutor__93DA661D916EF89E");

                    b.HasIndex("IdAccount");

                    b.ToTable("Tutor", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.TutorField", b =>
                {
                    b.Property<string>("IdTutorFileld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Tutor_Fileld");

                    b.Property<string>("IdField")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Field");

                    b.Property<string>("IdTutor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_Tutor");

                    b.HasKey("IdTutorFileld")
                        .HasName("PK__Tutor_Fi__CBB4B60C26DD204F");

                    b.HasIndex("IdField");

                    b.HasIndex("IdTutor");

                    b.ToTable("Tutor_Field", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.TypeOfService", b =>
                {
                    b.Property<string>("IdTypeOfService")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_TypeOfService");

                    b.Property<string>("NameService")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTypeOfService")
                        .HasName("PK__Type of __0DF9946FAF2D937A");

                    b.ToTable("Type of service", (string)null);
                });

            modelBuilder.Entity("ODTLearning.Entities.EducationalQualification", b =>
                {
                    b.HasOne("ODTLearning.Entities.Tutor", "IdTutorNavigation")
                        .WithMany("EducationalQualifications")
                        .HasForeignKey("IdTutor")
                        .HasConstraintName("FK__Education__id_Tu__324172E1");

                    b.Navigation("IdTutorNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Feedback", b =>
                {
                    b.HasOne("ODTLearning.Entities.Account", "IdAccountNavigation")
                        .WithMany("Feedbacks")
                        .HasForeignKey("IdAccount")
                        .HasConstraintName("FK__Feedback__id_Acc__3DB3258D");

                    b.Navigation("IdAccountNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Message", b =>
                {
                    b.HasOne("ODTLearning.Entities.Account", "IdAccountNavigation")
                        .WithMany("Messages")
                        .HasForeignKey("IdAccount")
                        .HasConstraintName("FK__Messages__id_Acc__54968AE5");

                    b.Navigation("IdAccountNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Post", b =>
                {
                    b.HasOne("ODTLearning.Entities.Account", "IdAccountNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("IdAccount")
                        .HasConstraintName("FK__Post__id_Account__4924D839");

                    b.HasOne("ODTLearning.Entities.TypeOfService", "IdTypeOfServiceNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("IdTypeOfService")
                        .HasConstraintName("FK__Post__id_TypeOfS__4A18FC72");

                    b.Navigation("IdAccountNavigation");

                    b.Navigation("IdTypeOfServiceNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.RefreshToken", b =>
                {
                    b.HasOne("ODTLearning.Entities.Account", "IdAccountNavigation")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("IdAccount")
                        .IsRequired()
                        .HasConstraintName("FK__RefreshTo__ID_Ac__5A4F643B");

                    b.Navigation("IdAccountNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Rent", b =>
                {
                    b.HasOne("ODTLearning.Entities.Account", "IdAccountNavigation")
                        .WithMany("Rents")
                        .HasForeignKey("IdAccount")
                        .HasConstraintName("FK__Rent__id_Account__4CF5691D");

                    b.HasOne("ODTLearning.Entities.Schedule", "IdScheduleNavigation")
                        .WithMany("Rents")
                        .HasForeignKey("IdSchedule")
                        .HasConstraintName("FK__Rent__id_Schedul__4DE98D56");

                    b.Navigation("IdAccountNavigation");

                    b.Navigation("IdScheduleNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.ResquestTutor", b =>
                {
                    b.HasOne("ODTLearning.Entities.Post", "IdPostNavigation")
                        .WithMany("ResquestTutors")
                        .HasForeignKey("IdPost")
                        .HasConstraintName("FK__ResquestT__id_Po__51BA1E3A");

                    b.HasOne("ODTLearning.Entities.Tutor", "IdTutorNavigation")
                        .WithMany("ResquestTutors")
                        .HasForeignKey("IdTutor")
                        .HasConstraintName("FK__ResquestT__id_Tu__50C5FA01");

                    b.Navigation("IdPostNavigation");

                    b.Navigation("IdTutorNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Schedule", b =>
                {
                    b.HasOne("ODTLearning.Entities.Service", "IdServiceNavigation")
                        .WithMany("Schedules")
                        .HasForeignKey("IdService")
                        .HasConstraintName("FK__Schedule__id_Ser__46486B8E");

                    b.HasOne("ODTLearning.Entities.Tutor", "IdTutorNavigation")
                        .WithMany("Schedules")
                        .HasForeignKey("IdTutor")
                        .HasConstraintName("FK__Schedule__id_Tut__45544755");

                    b.Navigation("IdServiceNavigation");

                    b.Navigation("IdTutorNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Service", b =>
                {
                    b.HasOne("ODTLearning.Entities.Feedback", "IdFeedbackNavigation")
                        .WithOne("Service")
                        .HasForeignKey("ODTLearning.Entities.Service", "IdFeedback")
                        .HasConstraintName("FK__Service__id_feed__4277DAAA");

                    b.HasOne("ODTLearning.Entities.TypeOfService", "IdTypeOfServiceNavigation")
                        .WithMany("Services")
                        .HasForeignKey("IdTypeOfService")
                        .HasConstraintName("FK__Service__id_Type__4183B671");

                    b.Navigation("IdFeedbackNavigation");

                    b.Navigation("IdTypeOfServiceNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Tutor", b =>
                {
                    b.HasOne("ODTLearning.Entities.Account", "IdAccountNavigation")
                        .WithMany("Tutors")
                        .HasForeignKey("IdAccount")
                        .HasConstraintName("FK__Tutor__id_Accoun__2F650636");

                    b.Navigation("IdAccountNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.TutorField", b =>
                {
                    b.HasOne("ODTLearning.Entities.Field", "IdFieldNavigation")
                        .WithMany("TutorFields")
                        .HasForeignKey("IdField")
                        .HasConstraintName("FK__Tutor_Fie__id_Fi__37FA4C37");

                    b.HasOne("ODTLearning.Entities.Tutor", "IdTutorNavigation")
                        .WithMany("TutorFields")
                        .HasForeignKey("IdTutor")
                        .HasConstraintName("FK__Tutor_Fie__id_Tu__370627FE");

                    b.Navigation("IdFieldNavigation");

                    b.Navigation("IdTutorNavigation");
                });

            modelBuilder.Entity("ODTLearning.Entities.Account", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Messages");

                    b.Navigation("Posts");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Rents");

                    b.Navigation("Tutors");
                });

            modelBuilder.Entity("ODTLearning.Entities.Feedback", b =>
                {
                    b.Navigation("Service");
                });

            modelBuilder.Entity("ODTLearning.Entities.Field", b =>
                {
                    b.Navigation("TutorFields");
                });

            modelBuilder.Entity("ODTLearning.Entities.Post", b =>
                {
                    b.Navigation("ResquestTutors");
                });

            modelBuilder.Entity("ODTLearning.Entities.Schedule", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("ODTLearning.Entities.Service", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ODTLearning.Entities.Tutor", b =>
                {
                    b.Navigation("EducationalQualifications");

                    b.Navigation("ResquestTutors");

                    b.Navigation("Schedules");

                    b.Navigation("TutorFields");
                });

            modelBuilder.Entity("ODTLearning.Entities.TypeOfService", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
